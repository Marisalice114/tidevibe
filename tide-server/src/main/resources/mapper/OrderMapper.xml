<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sky.mapper.OrderMapper">

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO orders
        (number, status, user_id, address_book_id, order_time, checkout_time, pay_method, pay_status, amount, remark,
         user_name, phone, address, consignee, cancel_reason, rejection_reason, cancel_time, estimated_delivery_time,
         delivery_status, delivery_time, pack_amount, tableware_number, tableware_status)
        VALUES
            (#{number}, #{status}, #{userId}, #{addressBookId}, #{orderTime}, #{checkoutTime}, #{payMethod}, #{payStatus},
             #{amount}, #{remark}, #{userName}, #{phone}, #{address}, #{consignee}, #{cancelReason}, #{rejectionReason},
             #{cancelTime}, #{estimatedDeliveryTime}, #{deliveryStatus}, #{deliveryTime}, #{packAmount},
             #{tablewareNumber}, #{tablewareStatus})
    </insert>


    <update id="update" parameterType="com.sky.entity.Orders">
        update orders
        <set>
            <if test="cancelReason != null and cancelReason!='' ">
                cancel_reason=#{cancelReason},
            </if>
            <if test="rejectionReason != null and rejectionReason!='' ">
                rejection_reason=#{rejectionReason},
            </if>
            <if test="cancelTime != null">
                cancel_time=#{cancelTime},
            </if>
            <if test="payStatus != null">
                pay_status=#{payStatus},
            </if>
            <if test="payMethod != null">
                pay_method=#{payMethod},
            </if>
            <if test="checkoutTime != null">
                checkout_time=#{checkoutTime},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="deliveryTime != null">
                delivery_time = #{deliveryTime}
            </if>
            version = version + 1,
        </set>
        where id = #{id}
    </update>

    <update id="updateWithVersion" parameterType="com.sky.entity.Orders">
        update orders
        <set>
            <if test="cancelReason != null and cancelReason!='' ">
                cancel_reason=#{cancelReason},
            </if>
            <if test="rejectionReason != null and rejectionReason!='' ">
                rejection_reason=#{rejectionReason},
            </if>
            <if test="cancelTime != null">
                cancel_time=#{cancelTime},
            </if>
            <if test="payStatus != null">
                pay_status=#{payStatus},
            </if>
            <if test="payMethod != null">
                pay_method=#{payMethod},
            </if>
            <if test="checkoutTime != null">
                checkout_time=#{checkoutTime},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="deliveryTime != null">
                delivery_time = #{deliveryTime},
            </if>
            version = version + 1,
        </set>
        where id = #{id} and version = #{version}
    </update>


    <select id="pageQuery" resultType="com.sky.entity.Orders">
        select * from orders
        <where>
            <if test="number != null and number != ''">
                and number like concat('%',#{number},'%')
            </if>
            <if test="phone != null and phone != ''">
                and phone like concat('%',#{phone},'%')
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="beginTime != null">
                and order_time &gt;= #{beginTime}
            </if>
            <if test="endTime != null">
                and order_time &lt;= #{endTime}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
        </where>
        order by order_time desc
    </select>

    <select id="statistics" resultType="com.sky.vo.OrderStatisticsVO">
        SELECT
            SUM(CASE WHEN status = 2 THEN 1 ELSE 0 END) AS toBeConfirmed,
            SUM(CASE WHEN status = 3 THEN 1 ELSE 0 END) AS confirmed,
            SUM(CASE WHEN status = 4 THEN 1 ELSE 0 END) AS deliveryInProgress
        FROM orders
        WHERE status IN (2, 3, 4)
    </select>

    <select id="sumByMap" resultType="java.lang.Double">
        select sum(amount) from orders
        <where>
            <if test="begin != null">
                and order_time &gt;= #{beginTime}
            </if>
            <if test="end != null">
                and order_time &lt;= #{endTime}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
        </where>

    </select>

    <select id="getSumByDateRange" resultType="java.util.Map">
        Select date(order_time) as order_date, sum(amount) as total_amount
        from orders
        where status = #{status} and order_time between #{begin} and #{end}
        group by date(order_time)
    </select>

    <select id="getCountByDateRange" resultType="java.util.Map">
        select
            date(order_time) as order_date,
            count(*) as order_count
        from orders
        <where>
            <if test="begin != null">
                and order_time &gt;= #{begin}
            </if>
            <if test="end != null">
                and order_time &lt;= #{end}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
        </where>
        group by date(order_time)

    </select>

    <select id="getTop10SalesByDateRange" resultType="java.util.Map">
        select
            od.name,sum(od.number) as number
        from orders o join order_detail od on od.order_id = o.id
        where
            o.order_time between #{begin} and #{end} and o.status = #{status}
        group by od.name
        order by number desc
        limit 10
    </select>

    <select id="getOverview" resultType="com.sky.vo.OrderOverViewVO">
        select COUNT(*) AS allOrders,
            COUNT(CASE WHEN status = 6 THEN 1 END) AS cancelledOrders,
            COUNT(CASE WHEN status = 5 THEN 1 END) AS completedOrders,
            COUNT(CASE WHEN status = 3 THEN 1 END) AS deliveredOrders,
            COUNT(CASE WHEN status = 1 THEN 1 END) AS waitingOrders
        FROM orders
    </select>

</mapper>
